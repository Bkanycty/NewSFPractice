# Что вы должны сделать в консоли Django?
#
# Создать двух пользователей (с помощью метода User.objects.create_user('username')).
user1 = User.objects.create_user('Умный Человек')
user2 = User.objects.create_user('Некий Идиот')

# Создать два объекта модели Author, связанные с пользователями.
Author.objects.create(authorUser=user1)
Author.objects.create(authorUser=user2)

# Добавить 4 категории в модель Category.
Category.objects.create(name='Политика')
Category.objects.create(name='Технологии')
Category.objects.create(name='Юмор')
Category.objects.create(name='Игры')

# Добавить 2 статьи и 1 новость.
author1 = Author.objects.get(id=1)
Post.objects.create(author=author1, categoryType='AR', title='Название статьи Умного Человека', text='Текст статьи Умного Человека')
Post.objects.create(author=author1, categoryType='NW', title='Название новости Умного Человека', text='И поэтому все так произошло')
author2 = Author.objects.get(id=2)
Post.objects.create(author=author2, categoryType='AR', title='Название статьи Некого Идиота', text='Я не понял, как это произошло')

# Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).
Post.objects.get(id=1).postCategory.add(Category.objects.get(id=2))
Post.objects.get(id=2).postCategory.add(Category.objects.get(id=3))
Post.objects.get(id=2).postCategory.add(Category.objects.get(id=4))
Post.objects.get(id=3).postCategory.add(Category.objects.get(id=1))

# Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).
Comment.objects.create(commentPost=Post.objects.get(id=1), commentUser=Author.objects.get(id=1).authorUser, text='Какой я молодец, такую статью написал!')
Comment.objects.create(commentPost=Post.objects.get(id=1), commentUser=Author.objects.get(id=2).authorUser, text='Фигня какая-то, ничего не понял')
Comment.objects.create(commentPost=Post.objects.get(id=2), commentUser=Author.objects.get(id=2).authorUser, text='Ничего смешного')
Comment.objects.create(commentPost=Post.objects.get(id=3), commentUser=Author.objects.get(id=2).authorUser, text='Виновато правительство')
Comment.objects.create(commentPost=Post.objects.get(id=3), commentUser=Author.objects.get(id=2).authorUser, text='Потому что мне некомфортно думать, что виноват я')

# Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.
Post.objects.get(id=1).like()

for i in range(5):
	Post.objects.get(id=2).dislike()
for i in range(10):
	Post.objects.get(id=3).like()

Comment.objects.get(id=4).like()
Comment.objects.get(id=4).like()
Comment.objects.get(id=4).like()
Comment.objects.get(id=1).dislike()

# Обновить рейтинги пользователей.
author1.update_rating()
author2.update_rating()

# Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).
best = Author.objects.order_by('-ratingAuthor')[:1]

for i in best:
	f'Лучший пользователь'
	f''
	f'username: {i.authorUser.username}'
	f'рейтинг: {i.ratingAuthor}'
	f''

# Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.
bestArticle = Post.objects.order_by('-rating')[:1]

for i in bestArticle:
	f'Лучшая статья'
	f''
	f'Дата добавления: {str(i.dateCreation)[0:19]}'
	f'username автора: {i.author.authorUser}'
	f'рейтинг: {i.rating}'
	f'заголовок: {i.title}'
	f'превью: {i.preview()}'
	f''

# Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.
commentsBest = Comment.objects.filter(commentPost=Post.objects.order_by('-rating')[:1])

for i in commentsBest:
	f'дата: {str(i.dateCreation)[0:19]}'
	f'пользователь: {i.commentUser}'
	f'рейтинг: {i.rating}'
	f'текст: {i.text}'
	f''

# или некрасивый вариант:
Comment.objects.filter(commentPost=Post.objects.order_by('-rating')[0]).values('dateCreation', 'commentUser', 'rating', 'text')

